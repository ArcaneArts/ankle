{
  "sksl": {
    "entrypoint": "rgb_fragment_main",
    "shader": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec2 uSize;\nuniform float uRadius;\nuniform float uSpin;\nuniform shader uTexture;\nuniform half2 uTexture_size;\n\nvec4 fragColor;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nvec3 FLT_flutter_local_rgb2hsv(vec3 c)\n{\n    float cMax = max(c.x, max(c.y, c.z));\n    float cMin = min(c.x, min(c.y, c.z));\n    float delta = cMax - cMin;\n    float h = 0.0;\n    float _62;\n    if (cMax == 0.0)\n    {\n        _62 = 0.0;\n    }\n    else\n    {\n        _62 = delta / cMax;\n    }\n    float s = _62;\n    float v = cMax;\n    if (delta != 0.0)\n    {\n        if (cMax == c.x)\n        {\n            h = (c.y - c.z) / delta;\n            if (c.y < c.z)\n            {\n                h += 6.0;\n            }\n        }\n        else\n        {\n            if (cMax == c.y)\n            {\n                h = 2.0 + ((c.z - c.x) / delta);\n            }\n            else\n            {\n                h = 4.0 + ((c.x - c.y) / delta);\n            }\n        }\n        h /= 6.0;\n    }\n    return vec3(h, s, v);\n}\n\nvec3 FLT_flutter_local_hsv2rgb(vec3 c)\n{\n    float h = c.x * 6.0;\n    float s = c.y;\n    float v = c.z;\n    float i = floor(h);\n    float f = h - i;\n    float p = v * (1.0 - s);\n    float q = v * (1.0 - (s * f));\n    float t = v * (1.0 - (s * (1.0 - f)));\n    if (i < 0.0)\n    {\n        i = 0.0;\n    }\n    if (i == 0.0)\n    {\n        return vec3(v, t, p);\n    }\n    if (i == 1.0)\n    {\n        return vec3(q, v, p);\n    }\n    if (i == 2.0)\n    {\n        return vec3(p, v, t);\n    }\n    if (i == 3.0)\n    {\n        return vec3(p, q, v);\n    }\n    if (i == 4.0)\n    {\n        return vec3(t, p, v);\n    }\n    return vec3(v, p, q);\n}\n\nvoid FLT_main()\n{\n    vec2 uv = FLT_flutter_local_FlutterFragCoord() / uSize;\n    vec4 color = uTexture.eval(uTexture_size * ( uv));\n    vec2 center = vec2(0.5);\n    float dist = distance(uv, center);\n    vec3 param = color.xyz;\n    vec3 hsv = FLT_flutter_local_rgb2hsv(param);\n    float hueShift = (dist / uRadius) * uSpin;\n    hsv.x = fract(hsv.x + hueShift);\n    vec3 param_1 = hsv;\n    vec3 finalColor = FLT_flutter_local_hsv2rgb(param_1);\n    fragColor = vec4(finalColor, color.w);\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
    "stage": 1,
    "uniforms": [
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 0,
        "name": "uSize",
        "rows": 2,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 1,
        "name": "uRadius",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 2,
        "name": "uSpin",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 0,
        "columns": 1,
        "location": 3,
        "name": "uTexture",
        "rows": 1,
        "type": 12
      }
    ]
  }
}