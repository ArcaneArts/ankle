{
  "sksl": {
    "entrypoint": "loader_fragment_main",
    "shader": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform float iTime;\nuniform vec2 iResolution;\nuniform vec3 color1;\nuniform vec3 color2;\nuniform vec3 color3;\nuniform float uInvert;\nuniform float uScale;\nuniform float uSpeed;\nuniform float uLength;\nuniform float uRadius;\nuniform float uFading;\nuniform float uGlow;\n\nvec4 fragColor;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nvec2 FLT_flutter_local_circle(float t)\n{\n    float x = uScale * sin(t);\n    float y = uScale * cos(t);\n    return vec2(x, y);\n}\n\nvec2 FLT_flutter_local_sdBezier(vec2 pos, vec2 A, vec2 B, vec2 C)\n{\n    vec2 a = B - A;\n    vec2 b = (A - (B * 2.0)) + C;\n    vec2 c = a * 2.0;\n    vec2 d = A - pos;\n    float kk = 1.0 / dot(b, b);\n    float kx = kk * dot(a, b);\n    float ky = (kk * ((2.0 * dot(a, a)) + dot(d, b))) / 3.0;\n    float kz = kk * dot(d, a);\n    float p = ky - (kx * kx);\n    float p3 = (p * p) * p;\n    float q = (kx * (((2.0 * kx) * kx) - (3.0 * ky))) + kz;\n    float h = (q * q) + (4.0 * p3);\n    h = sqrt(h);\n    vec2 x = (vec2(h, -h) - vec2(q)) / vec2(2.0);\n    vec2 uv = sign(x) * pow(abs(x), vec2(0.3333333432674407958984375));\n    float t = clamp((uv.x + uv.y) - kx, 0.0, 1.0);\n    return vec2(length(d + ((c + (b * t)) * t)), t);\n}\n\nfloat FLT_flutter_local_mapcircle(vec2 pos, float sp)\n{\n    float t = fract(((-uSpeed) * iTime) * sp);\n    float dl = uLength / 25.0;\n    float param = t * 6.283185482025146484375;\n    vec2 p1 = FLT_flutter_local_circle(param);\n    float param_1 = (dl + t) * 6.283185482025146484375;\n    vec2 p2 = FLT_flutter_local_circle(param_1);\n    vec2 c = (p1 + p2) / vec2(2.0);\n    float d = 1000000000.0;\n    for (int i = 2; i < 25; i++)\n    {\n        float fi = float(i);\n        p1 = p2;\n        float param_2 = ((fi * dl) + t) * 6.283185482025146484375;\n        p2 = FLT_flutter_local_circle(param_2);\n        vec2 cPrev = c;\n        c = (p1 + p2) / vec2(2.0);\n        vec2 param_3 = pos;\n        vec2 param_4 = cPrev;\n        vec2 param_5 = p1;\n        vec2 param_6 = c;\n        vec2 f = FLT_flutter_local_sdBezier(param_3, param_4, param_5, param_6);\n        d = min(d, f.x + ((uFading * (f.y + fi)) / 25.0));\n    }\n    return d;\n}\n\nvec2 FLT_flutter_local_leminiscate(float t)\n{\n    float s = sin(t);\n    float c = cos(t);\n    float denom = 1.0 + (s * s);\n    return vec2(uScale * (c / denom), uScale * ((s * c) / denom));\n}\n\nfloat FLT_flutter_local_mapinfinite(vec2 pos, float sp)\n{\n    float t = fract(((-uSpeed) * iTime) * sp);\n    float dl = uLength / 25.0;\n    float param = t * 6.283185482025146484375;\n    vec2 p1 = FLT_flutter_local_leminiscate(param);\n    float param_1 = (dl + t) * 6.283185482025146484375;\n    vec2 p2 = FLT_flutter_local_leminiscate(param_1);\n    vec2 c = (p1 + p2) / vec2(2.0);\n    float d = 1000000000.0;\n    for (int i = 2; i < 25; i++)\n    {\n        float fi = float(i);\n        p1 = p2;\n        float param_2 = ((fi * dl) + t) * 6.283185482025146484375;\n        p2 = FLT_flutter_local_leminiscate(param_2);\n        vec2 cPrev = c;\n        c = (p1 + p2) / vec2(2.0);\n        vec2 param_3 = pos;\n        vec2 param_4 = cPrev;\n        vec2 param_5 = p1;\n        vec2 param_6 = c;\n        vec2 f = FLT_flutter_local_sdBezier(param_3, param_4, param_5, param_6);\n        d = min(d, f.x + ((uFading * (f.y + fi)) / 25.0));\n    }\n    return d;\n}\n\nvoid FLT_main()\n{\n    vec2 fragCoord = FLT_flutter_local_FlutterFragCoord();\n    vec2 uv = ((fragCoord * 2.0) - iResolution) / vec2(iResolution.y);\n    vec2 param_7 = uv.yx * vec2(1.0, 0.660000026226043701171875);\n    float param_8 = 1.0;\n    float dist1 = FLT_flutter_local_mapcircle(param_7, param_8);\n    vec2 param_9 = uv * vec2(0.660000026226043701171875, 1.0);\n    float param_10 = 2.0;\n    float dist2 = FLT_flutter_local_mapinfinite(param_9, param_10);\n    vec2 param_11 = uv * vec2(0.87999999523162841796875);\n    float param_12 = 4.0;\n    float dist3 = FLT_flutter_local_mapcircle(param_11, param_12);\n    vec3 col1 = color1 * pow(uRadius / dist1, uGlow);\n    vec3 col2 = color2 * pow(uRadius / dist2, uGlow);\n    vec3 col3 = color3 * pow(uRadius / dist3, uGlow);\n    vec3 col = ((col1 + col2) + col3) * (2.0 * uGlow);\n    float alpha = max(col.x, max(col.y, col.z));\n    alpha = clamp(alpha, 0.0, 1.0);\n    fragColor = vec4(col * uInvert, alpha);\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
    "stage": 1,
    "uniforms": [
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 0,
        "name": "iTime",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 1,
        "name": "iResolution",
        "rows": 2,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 2,
        "name": "color1",
        "rows": 3,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 3,
        "name": "color2",
        "rows": 3,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 4,
        "name": "color3",
        "rows": 3,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 5,
        "name": "uInvert",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 6,
        "name": "uScale",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 7,
        "name": "uSpeed",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 8,
        "name": "uLength",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 9,
        "name": "uRadius",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 10,
        "name": "uFading",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 11,
        "name": "uGlow",
        "rows": 1,
        "type": 10
      }
    ]
  }
}