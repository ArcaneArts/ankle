{
  "sksl": {
    "entrypoint": "warp_fragment_main",
    "shader": "// This SkSL shader is autogenerated by spirv-cross.\n\nfloat4 flutter_FragCoord;\n\nuniform vec2 uSize;\nuniform float uFreq;\nuniform float uAmp;\nuniform float uZ;\nuniform float uOctaves;\nuniform shader uTexture;\nuniform half2 uTexture_size;\n\nvec4 fragColor;\n\nvec2 FLT_flutter_local_FlutterFragCoord()\n{\n    return flutter_FragCoord.xy;\n}\n\nvec3 FLT_flutter_local_hash3(inout vec3 p)\n{\n    p = vec3(dot(p, vec3(127.09999847412109375, 311.70001220703125, 74.6999969482421875)), dot(p, vec3(269.5, 183.3000030517578125, 246.100006103515625)), dot(p, vec3(113.5, 271.899993896484375, 124.59999847412109375)));\n    return vec3(-1.0) + (fract(sin(p) * 43758.546875) * 2.0);\n}\n\nfloat FLT_flutter_local_n3(vec3 p)\n{\n    float s = ((p.x + p.y) + p.z) * 0.3333333432674407958984375;\n    vec3 i = floor(p + vec3(s));\n    float t = ((i.x + i.y) + i.z) * 0.16666667163372039794921875;\n    vec3 X0 = i - vec3(t);\n    vec3 x0 = p - X0;\n    vec3 e = step(x0.yzx, x0);\n    vec3 i1 = min(e, vec3(1.0) - e.zxy);\n    vec3 i2 = max(e, vec3(1.0) - e.zxy);\n    vec3 x1 = (x0 - i1) + vec3(0.16666667163372039794921875);\n    vec3 x2 = (x0 - i2) + vec3(0.3333333432674407958984375);\n    vec3 x3 = (x0 - vec3(1.0)) + vec3(0.5);\n    vec3 param = i;\n    vec3 _145 = FLT_flutter_local_hash3(param);\n    vec3 g0 = _145;\n    vec3 param_1 = i + i1;\n    vec3 _151 = FLT_flutter_local_hash3(param_1);\n    vec3 g1 = _151;\n    vec3 param_2 = i + i2;\n    vec3 _157 = FLT_flutter_local_hash3(param_2);\n    vec3 g2 = _157;\n    vec3 param_3 = i + vec3(1.0);\n    vec3 _163 = FLT_flutter_local_hash3(param_3);\n    vec3 g3 = _163;\n    float t0 = 0.5 - dot(x0, x0);\n    float t1 = 0.5 - dot(x1, x1);\n    float t2 = 0.5 - dot(x2, x2);\n    float t3 = 0.5 - dot(x3, x3);\n    float _189;\n    if (t0 < 0.0)\n    {\n        _189 = 0.0;\n    }\n    else\n    {\n        _189 = pow(t0, 4.0) * dot(g0, x0);\n    }\n    float n0 = _189;\n    float _204;\n    if (t1 < 0.0)\n    {\n        _204 = 0.0;\n    }\n    else\n    {\n        _204 = pow(t1, 4.0) * dot(g1, x1);\n    }\n    float n1 = _204;\n    float _218;\n    if (t2 < 0.0)\n    {\n        _218 = 0.0;\n    }\n    else\n    {\n        _218 = pow(t2, 4.0) * dot(g2, x2);\n    }\n    float n2 = _218;\n    float _232;\n    if (t3 < 0.0)\n    {\n        _232 = 0.0;\n    }\n    else\n    {\n        _232 = pow(t3, 4.0) * dot(g3, x3);\n    }\n    float n3 = _232;\n    return 32.0 * (((n0 + n1) + n2) + n3);\n}\n\nvoid FLT_main()\n{\n    vec2 coord = FLT_flutter_local_FlutterFragCoord();\n    vec2 uv = coord / uSize;\n    vec2 warpScale = (vec2(0.60000002384185791015625) * (uSize / vec2(100.0))) * uFreq;\n    vec2 warpAmount = clamp(vec2(uAmp), vec2(0.0), uSize) / uSize;\n    vec3 param_4 = vec3(uv * warpScale, uZ);\n    float nx = FLT_flutter_local_n3(param_4);\n    vec3 param_5 = vec3((uv + vec2(13.36999988555908203125, 42.4199981689453125)) * warpScale, uZ);\n    float ny = FLT_flutter_local_n3(param_5);\n    uv += (warpAmount * vec2(nx, ny));\n    vec2 padding = warpAmount + vec2(1.0);\n    uv *= padding;\n    uv -= ((padding - vec2(1.0)) / vec2(2.0));\n    bool _332 = uv.x < 0.0;\n    bool _339;\n    if (!_332)\n    {\n        _339 = uv.x > 1.0;\n    }\n    else\n    {\n        _339 = _332;\n    }\n    bool _346;\n    if (!_339)\n    {\n        _346 = uv.y < 0.0;\n    }\n    else\n    {\n        _346 = _339;\n    }\n    bool _353;\n    if (!_346)\n    {\n        _353 = uv.y > 1.0;\n    }\n    else\n    {\n        _353 = _346;\n    }\n    if (_353)\n    {\n        fragColor = vec4(0.0);\n        return;\n    }\n    fragColor = uTexture.eval(uTexture_size * ( uv));\n}\n\nhalf4 main(float2 iFragCoord)\n{\n      flutter_FragCoord = float4(iFragCoord, 0, 0);\n      FLT_main();\n      return fragColor;\n}\n",
    "stage": 1,
    "uniforms": [
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 0,
        "name": "uSize",
        "rows": 2,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 0,
        "columns": 1,
        "location": 1,
        "name": "uTexture",
        "rows": 1,
        "type": 12
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 2,
        "name": "uFreq",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 3,
        "name": "uAmp",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 4,
        "name": "uZ",
        "rows": 1,
        "type": 10
      },
      {
        "array_elements": 0,
        "bit_width": 32,
        "columns": 1,
        "location": 5,
        "name": "uOctaves",
        "rows": 1,
        "type": 10
      }
    ]
  }
}